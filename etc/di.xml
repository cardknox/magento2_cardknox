<?xml version="1.0"?>
<!--
/**
 * Copyright Â© 2018 Cardknox Development Inc. All rights reserved.
 * See LICENSE for license details.
 */
-->

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <!-- Payment Method Facade configuration -->
    <virtualType name="CardknoxFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">CardknoxDevelopment\Cardknox\Model\Ui\ConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">CardknoxDevelopment\Cardknox\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">CardknoxDevelopment\Cardknox\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">CardknoxValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">CardknoxCommandPool</argument>
            <argument name="validatorPool" xsi:type="object">CardknoxValidatorPool</argument>
        </arguments>
    </virtualType>
    <!-- Cardknox credit card validators infrastructure -->
     <virtualType name="CardknoxCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>
    <virtualType name="CardknoxValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CardknoxCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Vault Method Facade configuration -->
    <virtualType name="CardknoxCreditCardVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="code" xsi:type="const">CardknoxDevelopment\Cardknox\Model\Ui\ConfigProvider::CC_VAULT_CODE</argument>
            <argument name="config" xsi:type="object">CardknoxVaultPaymentConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">CardknoxVaultPaymentValueHandlerPool</argument>
            <!--<argument name="valueHandlerPool" xsi:type="object">CardknoxValueHandlerPool</argument>-->
            <argument name="vaultProvider" xsi:type="object">CardknoxFacade</argument>
            <argument name="commandManagerPool" xsi:type="object">CardknoxCcVaultCommandManagerPool</argument>
        </arguments>
    </virtualType>
    <virtualType name="CardknoxVaultPaymentConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CardknoxDevelopment\Cardknox\Model\Ui\ConfigProvider::CC_VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="CardknoxVaultPaymentValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CardknoxVaultPaymentConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="CardknoxVaultPaymentValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CardknoxVaultPaymentValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CardknoxCcVaultCommandManagerPool" type="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="cardknox" xsi:type="string">CardknoxCommandManager</item>
            </argument>
        </arguments>
    </virtualType>
    <!--<type name="Magento\Payment\Gateway\Command\CommandManagerPool">-->
        <!--<arguments>-->
            <!--<argument name="executors" xsi:type="array">-->
                <!--<item name="cardknox" xsi:type="string">CardknoxCommandManager</item>-->
            <!--</argument>-->
        <!--</arguments>-->
    <!--</type>-->

    <!-- END Configuration for Vault payments -->
    <!-- Command managers section for Vault -->
    <virtualType name="CardknoxCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">CardknoxCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- END command managers section for Vault -->
    <!-- Configuration reader -->
    <type name="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CardknoxDevelopment\Cardknox\Model\Ui\ConfigProvider::CODE</argument>
        </arguments>
    </type>
    <!-- Logger, initialized with CardknoxConfig -->
    <virtualType name="CardknoxLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>
    <type name="CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client">
        <arguments>
            <argument name="logger" xsi:type="object">CardknoxLogger</argument>
        </arguments>
    </type>
    <type name="CardknoxDevelopment\Cardknox\Gateway\Request\RefundRequest">
        <arguments>
            <argument name="logger" xsi:type="object">CardknoxLogger</argument>
        </arguments>
    </type>
    <type name="CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator">
        <arguments>
            <argument name="logger" xsi:type="object">CardknoxLogger</argument>
        </arguments>
    </type>
    <type name="CardknoxDevelopment\Cardknox\Gateway\Response\RefundHandler">
        <arguments>
            <argument name="logger" xsi:type="object">CardknoxLogger</argument>
        </arguments>
    </type>
    <type name="CardknoxDevelopment\Cardknox\Gateway\Response\VaultHandler">
        <arguments>
            <argument name="logger" xsi:type="object">CardknoxLogger</argument>
        </arguments>
    </type>
    <!-- Commands infrastructure -->
    <virtualType name="CardknoxCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">CardknoxAuthorizeCommand</item>
                <item name="vault_authorize" xsi:type="string">CardknoxVaultAuthorizeCommand</item>
                <item name="capture" xsi:type="string">CardknoxCaptureCommand</item>
                <item name="vault_sale" xsi:type="string">CardknoxVaultSaleCommand</item>
                <item name="void" xsi:type="string">CardknoxVoidCommand</item>
                <item name="refund" xsi:type="string">CardknoxRefundCommand</item>
                <item name="cancel" xsi:type="string">CardknoxCancelCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Vault Authorize command -->
    <virtualType name="CardknoxVaultAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxVaultAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!--Vault Authorization Request -->
    <virtualType name="CardknoxVaultAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\VaultAuthorizeRequest</item>
                <item name="Data" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Vault Sale command -->
    <virtualType name="CardknoxVaultSaleCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxVaultSaleRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!--Vault Sale Request -->
    <virtualType name="CardknoxVaultSaleRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\VaultSaleRequest</item>
                <item name="Data" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Authorize command -->
    <virtualType name="CardknoxAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxVaultResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Authorization Request -->
    <virtualType name="CardknoxAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\AuthorizationRequest</item>
                <item name="Data" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="CardknoxDevelopment\Cardknox\Gateway\Request\BaseRequest">
        <arguments>
            <argument name="config" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Config\Config</argument>
        </arguments>
    </type>
    <!-- Capture command -->
    <virtualType name="CardknoxCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxCaptureRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxVaultResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Capture Request -->
    <virtualType name="CardknoxCaptureRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\CaptureRequest</item>
                <item name="Data" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Void command -->
    <virtualType name="CardknoxVoidCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxVoidRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Response\VoidHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Void Request -->
    <virtualType name="CardknoxVoidRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\VoidRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Refund command -->
    <virtualType name="CardknoxRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxRefundRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Response\RefundHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Refund Request -->
    <virtualType name="CardknoxRefundRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\RefundRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Cancel command -->
    <virtualType name="CardknoxCancelCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxCancelRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Response\VoidHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Cancel Request -->
    <virtualType name="CardknoxCancelRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\CancelRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\BaseRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Error Mapping -->
    <virtualType name="CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualConfigReader" type="Magento\Payment\Gateway\ErrorMapper\VirtualConfigReader">
        <arguments>
            <argument name="fileName" xsi:type="string">cardknox_error_mapping.xml</argument>
        </arguments>
    </virtualType>
    <virtualType name="CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualMappingData" type="Magento\Payment\Gateway\ErrorMapper\MappingData">
        <arguments>
            <argument name="reader" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualConfigReader</argument>
            <argument name="cacheId" xsi:type="string">cardknox_error_mapper</argument>
        </arguments>
    </virtualType>

    <virtualType name="CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualErrorMessageMapper" type="Magento\Payment\Gateway\ErrorMapper\ErrorMessageMapper">
        <arguments>
            <argument name="messageMapping" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualMappingData</argument>
        </arguments>
    </virtualType>
    <!-- Response handlers -->
    <!-- Value handlers infrastructure -->
    <!--comment out the below when using version 2.1.0 > 2.1.3-->
    <type name="CardknoxDevelopment\Cardknox\Gateway\Response\VaultHandler">
        <arguments>
            <argument name="paymentTokenFactory" xsi:type="object">Magento\Vault\Model\CreditCardTokenFactory</argument>
        </arguments>
    </type>
    <virtualType name="CardknoxConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>
    <virtualType name="CardknoxResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="txnid" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Response\TxnIdHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CardknoxVaultResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="txnid" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Response\TxnIdHandler</item>
                <item name="vault" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Response\VaultHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CardknoxValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CardknoxConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Value handlers infrastructure -->
    <type name="Magento\Payment\Block\Info\Cc">
        <arguments>
            <argument name="data" xsi:type="array">
                <item xsi:type="string" name="is_secure_mode">1</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Payment\Block\Form\Cc">
        <arguments>
            <argument name="data" xsi:type="array">
                <item xsi:type="string" name="is_secure_mode">1</item>
            </argument>
        </arguments>
    </type>


    <!-- Google Pay -->

    <!-- Payment Method Facade configuration -->
    <virtualType name="CardknoxGooglePayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">CardknoxDevelopment\Cardknox\Model\Ui\GooglePayConfigProvider::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">CardknoxGpayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">CardknoxGpayCommandPool</argument>
            <argument name="formBlockType" xsi:type="object">CardknoxDevelopment\Cardknox\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\Info</argument>
            <argument name="validatorPool" xsi:type="object">CardknoxGpayValidatorPool</argument>
        </arguments>
    </virtualType>
    <!-- Cardknox GooglePay validators infrastructure -->
     <virtualType name="CardknoxGpayCountryValidator" type="CardknoxDevelopment\Cardknox\Gateway\Validator\GpayCountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Config\GpayConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="CardknoxGpayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Validator\GpayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="CardknoxGpayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CardknoxDevelopment\Cardknox\Model\Ui\GooglePayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

     <!-- Commands infrastructure -->
     <virtualType name="CardknoxGpayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">CardknoxGpayAuthorizeCommand</item>
                <item name="capture" xsi:type="string">CardknoxGpayCaptureCommand</item>
                <item name="void" xsi:type="string">CardknoxVoidCommand</item>
                <item name="refund" xsi:type="string">CardknoxRefundCommand</item>
                <item name="cancel" xsi:type="string">CardknoxCancelCommand</item>
            </argument>
        </arguments>
    </virtualType>

     <!-- Authorize command -->
    <virtualType name="CardknoxGpayAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxGpayAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxGpayVaultResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
        </arguments>
    </virtualType>

    <!-- Authorization Request -->
    <virtualType name="CardknoxGpayAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\GooglePayAuthorizationRequest</item>
                <item name="Data" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\GooglePayBaseRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Capture command -->
    <virtualType name="CardknoxGpayCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxGPayCaptureRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxVaultResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Capture Request -->
    <virtualType name="CardknoxGPayCaptureRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\GooglePayCaptureRequest</item>
                <item name="Data" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\GooglePayBaseRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Response handlers -->
    <virtualType name="CardknoxGpayVaultResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="txnid" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Response\TxnIdHandler</item>
            </argument>
        </arguments>
    </virtualType>


    <!-- Value handlers infrastructure -->

    <virtualType name="CardknoxGpayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CardknoxGpayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="CardknoxGpayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CardknoxGpayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Update Shipping and Billing Address for guest order which is placed from the checkout/cart page -->
    <type name="Magento\Sales\Api\OrderManagementInterface">
        <plugin name="before_place_order_operation"
            type="CardknoxDevelopment\Cardknox\Plugin\OrderManagement"
            sortOrder="10"/>
    </type>

    <!-- Apple Pay -->

    <!-- Payment Method Facade configuration -->
    <virtualType name="CardknoxApplePayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">CardknoxDevelopment\Cardknox\Model\Ui\ApplePayConfigProvider::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">CardknoxApplePayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">CardknoxApplePayCommandPool</argument>
            <argument name="formBlockType" xsi:type="object">CardknoxDevelopment\Cardknox\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\Info</argument>
            <argument name="validatorPool" xsi:type="object">CardknoxApplePayValidatorPool</argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="CardknoxApplePayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CardknoxApplePayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CardknoxApplePayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CardknoxApplePayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="CardknoxApplePayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">CardknoxDevelopment\Cardknox\Model\Ui\ApplePayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

     <!-- Commands infrastructure -->
     <virtualType name="CardknoxApplePayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">CardknoxApplePayAuthorizeCommand</item>
                <item name="capture" xsi:type="string">CardknoxApplePayCaptureCommand</item>
                <item name="void" xsi:type="string">CardknoxVoidCommand</item>
                <item name="refund" xsi:type="string">CardknoxRefundCommand</item>
                <item name="cancel" xsi:type="string">CardknoxCancelCommand</item>
            </argument>
        </arguments>
    </virtualType>

     <!-- Authorize command -->
    <virtualType name="CardknoxApplePayAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxApplePayAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxApplePayVaultResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
        </arguments>
    </virtualType>

    <!-- Authorization Request -->
    <virtualType name="CardknoxApplePayAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\ApplePayAuthorizationRequest</item>
                <item name="Data" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\ApplePayBaseRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Capture command -->
    <virtualType name="CardknoxApplePayCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CardknoxApplePayCaptureRequest</argument>
            <argument name="handler" xsi:type="object">CardknoxVaultResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Http\Client\Client</argument>
            <argument name="errorMessageMapper" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\ErrorMapper\VirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Capture Request -->
    <virtualType name="CardknoxApplePayCaptureRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\ApplePayCaptureRequest</item>
                <item name="Data" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\DataRequest</item>
                <item name="Base" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Request\ApplePayBaseRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Response handlers -->
    <virtualType name="CardknoxApplePayVaultResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="txnid" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Response\TxnIdHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Cardknox Apple Pay validators infrastructure -->
    <virtualType name="CardknoxApplePayCountryValidator" type="CardknoxDevelopment\Cardknox\Gateway\Validator\ApplePayCountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CardknoxDevelopment\Cardknox\Gateway\Config\ApplePayConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="CardknoxApplePayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CardknoxDevelopment\Cardknox\Gateway\Validator\ApplePayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>

</config>
